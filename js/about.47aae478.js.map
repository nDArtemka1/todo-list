{"version":3,"file":"js/about.47aae478.js","mappings":"sUAKA,MAAMA,GAAQC,EAAAA,EAAAA,MAERC,GAAOC,EAAAA,EAAAA,IAAIH,EAAMI,QAAQC,U,OAE/BC,EAAAA,EAAAA,IAAMJ,GAAOK,IACTC,aAAaC,QAAQ,OAAQF,EAAO,KAGxCG,EAAAA,EAAAA,KAAU,KACNR,EAAKS,MAAQH,aAAaI,QAAQ,SAAW,EAAE,I,oNCXnD,MAAMC,EAAc,EAEpB,Q,8cCDA,MAAMb,GAAQC,EAAAA,EAAAA,MAERa,GAAgBX,EAAAA,EAAAA,IAAI,IACpBY,GAAiBZ,EAAAA,EAAAA,IAAI,MAErBa,EAAUA,IACLhB,EAAMiB,OAAO,cAAe,CAC/BC,QAASJ,EAAcH,MACvBQ,SAAUJ,EAAeJ,MACzBS,MAAM,EACNC,cAAc,EACdC,WAAW,IAAIC,MAAOC,YAIxBC,EAAcA,IACTzB,EAAMiB,OAAO,iB,sxBCjBxB,MAAM,EAAc,EAEpB,Q,iXCDA,MAAMjB,GAAQC,EAAAA,EAAAA,MAERyB,GAAQC,EAAAA,EAAAA,KAAS,IACZ3B,EAAMI,QAAQwB,iBAGnBC,EAAgBC,GACX9B,EAAMiB,OAAO,iBAAkBa,GAGpCC,EAAYD,GAEP9B,EAAMiB,OAAO,YAAaa,GAG/BL,EAAcA,IAETzB,EAAMiB,OAAO,iBAGlBe,EAAcF,GAET9B,EAAMiB,OAAO,cAAea,GAGjCG,GAAmB9B,EAAAA,EAAAA,M,OAEzBO,EAAAA,EAAAA,KAAU,KACNwB,SAASC,iBAAiB,SAAUL,IAC5BA,EAAKM,SAAWH,EAAiBtB,OACjCc,GACJ,GACF,I,+iCCjCN,MAAM,EAAc,EAEpB,Q,6YCAA,MAAMzB,GAAQC,EAAAA,EAAAA,MAERoC,GAAcV,EAAAA,EAAAA,KAAS,IAClB3B,EAAMI,QAAQkC,eAEnBC,GAAYZ,EAAAA,EAAAA,KAAS,IAChB3B,EAAMI,QAAQoC,oBAGzB,IAAIC,GAAad,EAAAA,EAAAA,KAAS,IACf3B,EAAMI,QAAQsC,cAGrBC,GAAYhB,EAAAA,EAAAA,KAAS,IACd3B,EAAMI,QAAQwC,aAGzB,MAAMC,EAAWA,IACN7C,EAAMiB,OAAO,aAElB6B,EAAWA,IACN9C,EAAMiB,OAAO,aAGlBQ,EAAcA,IAETzB,EAAMiB,OAAO,iB,6bC5BxB,MAAM,EAAc,EAEpB,Q,sGCeA,MAAMjB,GAAQC,EAAAA,EAAAA,MAERwB,EAAcA,IACTzB,EAAMiB,OAAO,iBAGlBgB,GAAmB9B,EAAAA,EAAAA,M,OAEzBO,EAAAA,EAAAA,KAAU,KACNwB,SAASC,iBAAiB,SAAUL,IAC5BA,EAAKM,SAAWH,EAAiBtB,OACjCc,GACJ,GACF,I,qKC9BN,MAAM,GAAc,GAEpB,S","sources":["webpack://todo-list/./src/components/Greeting.vue","webpack://todo-list/./src/components/Greeting.vue?23cf","webpack://todo-list/./src/components/CreateToDo.vue","webpack://todo-list/./src/components/CreateToDo.vue?fdd6","webpack://todo-list/./src/components/ToDoList.vue","webpack://todo-list/./src/components/ToDoList.vue?7cfe","webpack://todo-list/./src/components/ToDoListInfo.vue","webpack://todo-list/./src/components/ToDoListInfo.vue?42de","webpack://todo-list/./src/views/AboutView.vue","webpack://todo-list/./src/views/AboutView.vue?d56f"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted, watch } from \"vue\";\r\n\r\nimport { useStore } from \"vuex\";\r\n\r\nconst store = useStore();\r\n\r\nconst name = ref(store.getters.GET_NAME);\r\n\r\nwatch(name, (newVal) => {\r\n    localStorage.setItem(\"name\", newVal);\r\n});\r\n\r\nonMounted(() => {\r\n    name.value = localStorage.getItem(\"name\") || \"\";\r\n});\r\n</script>\r\n\r\n<template>\r\n    <section class=\"greeting\">\r\n        <h2 class=\"title\">\r\n            <span>Добро пожаловать,</span>\r\n            <input type=\"text\" placeholder=\"Введите ваше имя\" v-model=\"name\" />\r\n        </h2>\r\n    </section>\r\n</template>\r\n","import script from \"./Greeting.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Greeting.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nimport { ref } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nconst store = useStore();\r\n\r\nconst input_content = ref(\"\");\r\nconst input_category = ref(null);\r\n\r\nconst addTask = () => {\r\n    return store.commit(\"CREATE_TASK\", {\r\n        content: input_content.value,\r\n        category: input_category.value,\r\n        done: false,\r\n        editTaskDone: false,\r\n        createdAt: new Date().getTime(),\r\n    });\r\n};\r\n\r\nconst editTaskOff = () => {\r\n    return store.commit(\"EDIT_TASK_OFF\");\r\n};\r\n</script>\r\n\r\n<template>\r\n    <section class=\"create-task\" @click=\"editTaskOff()\">\r\n        <h3 class=\"title\">У вас есть список задач?</h3>\r\n\r\n        <form @submit.prevent=\"addTask\">\r\n            <h4>Создать задачу</h4>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Например: Сходить в магазин за покупками\"\r\n                v-model.trim=\"input_content\"\r\n            />\r\n            <h4>Выбери категорию</h4>\r\n\r\n            <div class=\"options\">\r\n                <label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"category\"\r\n                        id=\"category1\"\r\n                        value=\"business\"\r\n                        v-model.trim=\"input_category\"\r\n                    />\r\n                    <span class=\"bubble business\"></span>\r\n                    <div>Бизнес</div>\r\n                </label>\r\n\r\n                <label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"category\"\r\n                        id=\"category2\"\r\n                        value=\"personal\"\r\n                        v-model.trim=\"input_category\"\r\n                    />\r\n                    <span class=\"bubble personal\"></span>\r\n                    <div>Личное</div>\r\n                </label>\r\n            </div>\r\n\r\n            <input type=\"submit\" value=\"Добавить задачу\" />\r\n        </form>\r\n    </section>\r\n</template>\r\n","import script from \"./CreateToDo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CreateToDo.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nimport { ref, computed, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nconst store = useStore();\r\n\r\nconst tasks = computed(() => {\r\n    return store.getters.PAGINATE_TASKS;\r\n});\r\n\r\nconst saveTaskDone = (task) => {\r\n    return store.commit(\"SAVE_TASK_DONE\", task);\r\n};\r\n\r\nconst editTask = (task) => {\r\n    // Переключает редактирование задачи\r\n    return store.commit(\"EDIT_TASK\", task);\r\n};\r\n\r\nconst editTaskOff = () => {\r\n    // Отключает редактирование задачи\r\n    return store.commit(\"EDIT_TASK_OFF\");\r\n};\r\n\r\nconst removeTask = (task) => {\r\n    // Удаляет задачу\r\n    return store.commit(\"REMOVE_TASK\", task);\r\n};\r\n\r\nconst taskContentFocus = ref();\r\n\r\nonMounted(() => {\r\n    document.addEventListener(\"click\", (task) => {\r\n        if (task.target === taskContentFocus.value) {\r\n            editTaskOff();\r\n        }\r\n    });\r\n});\r\n</script>\r\n\r\n<template>\r\n    <section class=\"task-list\" ref=\"taskContentFocus\">\r\n        <h3 @click=\"editTaskOff()\">\r\n            Список задач которые необходимо выполнить:\r\n        </h3>\r\n        <div class=\"list\" id=\"task-list\">\r\n            <div\r\n                v-for=\"(task, index) in tasks\"\r\n                :key=\"index\"\r\n                :class=\"`task-item ${task.done && 'done'}`\"\r\n            >\r\n                <label>\r\n                    <input\r\n                        @click=\"saveTaskDone(task)\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"task.done\"\r\n                    />\r\n                    <span\r\n                        :class=\"`bubble ${\r\n                            task.category == 'business'\r\n                                ? 'business'\r\n                                : 'personal'\r\n                        }`\"\r\n                    ></span>\r\n                </label>\r\n\r\n                <div class=\"task-content\">\r\n                    <div @click=\"editTask(task)\" v-if=\"!task.editTaskDone\">\r\n                        {{ task.content }}\r\n                    </div>\r\n                    <input\r\n                        v-if=\"task.editTaskDone\"\r\n                        type=\"text\"\r\n                        v-model=\"task.content\"\r\n                        v-on:keyup.enter=\"editTask(task)\"\r\n                    />\r\n                </div>\r\n\r\n                <div class=\"actions\">\r\n                    <div class=\"edit-btn\" @click=\"editTask(task)\">\r\n                        <span\r\n                            class=\"material-symbols-outlined\"\r\n                            style=\"line-height: none; font-size: 17px\"\r\n                        >\r\n                            border_color\r\n                        </span>\r\n                    </div>\r\n                    <button class=\"delete\" @click=\"removeTask(task)\">\r\n                        Удалить\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n","import script from \"./ToDoList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ToDoList.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nimport { ref, onMounted, computed, watch } from \"vue\";\r\n\r\nimport { useStore } from \"vuex\";\r\n\r\nconst store = useStore();\r\n\r\nconst tasksLength = computed(() => {\r\n    return store.getters.TASKS_LENGTH;\r\n});\r\nconst tasksDone = computed(() => {\r\n    return store.getters.DONE_TASKS_LENGTH;\r\n});\r\n\r\nlet pageNumber = computed(() => {\r\n    return store.getters.PAGE_NUMBER;\r\n});\r\n\r\nlet pageCount = computed(() => {\r\n    return store.getters.PAGE_COUNT;\r\n});\r\n\r\nconst prevPage = () => {\r\n    return store.commit(\"PREV_PAGE\");\r\n};\r\nconst nextPage = () => {\r\n    return store.commit(\"NEXT_PAGE\");\r\n};\r\n\r\nconst editTaskOff = () => {\r\n    // Отключает редактирование задачи\r\n    return store.commit(\"EDIT_TASK_OFF\");\r\n};\r\n</script>\r\n\r\n<template>\r\n    <section @click=\"editTaskOff()\">\r\n        <div v-if=\"tasksLength > 0\" class=\"task-list-info\">\r\n            <h3>Выполнено задач {{ tasksDone }} из {{ tasksLength }}</h3>\r\n\r\n            <div class=\"task-list-info-btns\">\r\n                <button\r\n                    class=\"task-list-info-btn\"\r\n                    :disabled=\"pageNumber === 0\"\r\n                    @click=\"prevPage\"\r\n                >\r\n                    <span class=\"material-symbols-outlined\">\r\n                        chevron_left\r\n                    </span>\r\n                </button>\r\n\r\n                <button\r\n                    class=\"task-list-info-btn\"\r\n                    :disabled=\"pageNumber >= pageCount - 1\"\r\n                    @click=\"nextPage\"\r\n                >\r\n                    <span\r\n                        class=\"material-symbols-outlined\"\r\n                        style=\"line-height: none; font-weight: 700\"\r\n                    >\r\n                        chevron_right\r\n                    </span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div v-else>\r\n            <h3>Пусто</h3>\r\n        </div>\r\n    </section>\r\n</template>\r\n","import script from \"./ToDoListInfo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ToDoListInfo.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <main id=\"main-app\" ref=\"taskContentFocus\">\n        <div class=\"app\">\n            <Greeting />\n            <CreateToDo />\n            <ToDoList />\n            <ToDoListInfo />\n        </div>\n        <div class=\"footer\"></div>\n    </main>\n</template>\n\n<script setup>\nimport { ref, onMounted } from \"vue\";\nimport Greeting from \"@/components/Greeting.vue\";\nimport CreateToDo from \"@/components/CreateToDo.vue\";\nimport ToDoList from \"@/components/ToDoList.vue\";\nimport ToDoListInfo from \"@/components/ToDoListInfo.vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\n\nconst editTaskOff = () => {\n    return store.commit(\"EDIT_TASK_OFF\");\n};\n\nconst taskContentFocus = ref();\n\nonMounted(() => {\n    document.addEventListener(\"click\", (task) => {\n        if (task.target === taskContentFocus.value) {\n            editTaskOff();\n        }\n    });\n});\n</script>\n","import script from \"./AboutView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AboutView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["store","useStore","name","ref","getters","GET_NAME","watch","newVal","localStorage","setItem","onMounted","value","getItem","__exports__","input_content","input_category","addTask","commit","content","category","done","editTaskDone","createdAt","Date","getTime","editTaskOff","tasks","computed","PAGINATE_TASKS","saveTaskDone","task","editTask","removeTask","taskContentFocus","document","addEventListener","target","tasksLength","TASKS_LENGTH","tasksDone","DONE_TASKS_LENGTH","pageNumber","PAGE_NUMBER","pageCount","PAGE_COUNT","prevPage","nextPage"],"sourceRoot":""}